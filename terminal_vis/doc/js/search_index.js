var search_data = {"index":{"searchIndex":["colorlegend","datadomain","dataoutput","datapoint","datarepository","dataseries","dataset","filereader","helpoutput","interpolator","metadata","object","parameterhandler","parameterrepository","string","add_data()","add_data_set()","add_data_with_default_meta()","bilinear_interpolation()","black()","black_bg()","blink()","blue()","blue_bg()","bright()","check_data_completeness()","create_metadata()","create_output()","create_output_string_for()","create_single_output_at_index()","cyan()","cyan_bg()","dark_gray_bg()","exchange_grounds()","get_and_check_index()","gray()","green()","green_bg()","hide()","interpolate_for_coordinate()","italic()","light_blue()","light_blue_bg()","light_cyan()","light_cyan_bg()","light_gray()","light_gray_bg()","light_green()","light_green_bg()","light_magenta()","light_magenta_bg()","light_red()","light_red_bg()","light_yellow()","light_yellow_bg()","linear_interpolation()","magenta()","magenta_bg()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","print_color_legend()","print_data()","print_error()","print_help()","print_help_for()","print_version()","red()","red_bg()","underline()","white()","white_bg()","yellow()","yellow_bg()","test_data"],"longSearchIndex":["colorlegend","datadomain","dataoutput","datapoint","datarepository","dataseries","dataset","filereader","helpoutput","interpolator","metadata","object","parameterhandler","parameterrepository","string","datarepository#add_data()","dataseries#add_data_set()","datarepository#add_data_with_default_meta()","interpolator::bilinear_interpolation()","string#black()","string#black_bg()","string#blink()","string#blue()","string#blue_bg()","string#bright()","datarepository#check_data_completeness()","object#create_metadata()","object#create_output()","colorlegend#create_output_string_for()","object#create_single_output_at_index()","string#cyan()","string#cyan_bg()","string#dark_gray_bg()","string#exchange_grounds()","object#get_and_check_index()","string#gray()","string#green()","string#green_bg()","string#hide()","object#interpolate_for_coordinate()","string#italic()","string#light_blue()","string#light_blue_bg()","string#light_cyan()","string#light_cyan_bg()","string#light_gray()","string#light_gray_bg()","string#light_green()","string#light_green_bg()","string#light_magenta()","string#light_magenta_bg()","string#light_red()","string#light_red_bg()","string#light_yellow()","string#light_yellow_bg()","interpolator::linear_interpolation()","string#magenta()","string#magenta_bg()","colorlegend::new()","datadomain::new()","datapoint::new()","datarepository::new()","dataseries::new()","dataset::new()","filereader::new()","metadata::new()","parameterhandler::new()","parameterrepository::new()","colorlegend#print_color_legend()","dataoutput::print_data()","object#print_error()","object#print_help()","helpoutput::print_help_for()","object#print_version()","string#red()","string#red_bg()","string#underline()","string#white()","string#white_bg()","string#yellow()","string#yellow_bg()",""],"info":[["ColorLegend","","ColorLegend.html","","<p>Class to color output field according to color in @value_legend\n@value_legend =&gt; color map for value …\n"],["DataDomain","","DataDomain.html","","<p>DataDomain represents the meta data for one dimension @name =&gt; name of\nthe data @lower =&gt; lower …\n"],["DataOutput","","DataOutput.html","","<p>Simple data output for the terminal visualization\n"],["DataPoint","","DataPoint.html","","<p>representation of a two dimensional point with a numeric value @coordinate\n=&gt; 2 dimensional coordinates …\n"],["DataRepository","","DataRepository.html","","<p>data repository storing the read data and handling the meta information\n@repository =&gt; Hash of metadata …\n"],["DataSeries","","DataSeries.html","","<p>Class to represent a series of multiple data sets @min_value =&gt; minimal\nvalue of the data, initial …\n"],["DataSet","","DataSet.html","","<p>Class to represent a two dimensional data set @min_value =&gt; minimal\nvalue of the data @max_value =&gt; …\n"],["FileReader","","FileReader.html","","<p>Simple file reader using the csv library to read a csv file requires csv\nraises IOError if csv throws …\n"],["HelpOutput","","HelpOutput.html","","<p>Output class for help text\n"],["Interpolator","","Interpolator.html","","<p>singleton math class to interpolate data between a set of points raises\nRangeError\n"],["MetaData","","MetaData.html","","<p>MetaData stores meta information about the data set two dimensional data\nset =&gt; @name =&gt; &lt;data_name&gt;, …\n"],["Object","","Object.html","",""],["ParameterHandler","","ParameterHandler.html","","<p>class to seperate the storage of the parameter in a repository entity and\nchecking for valid parameter …\n"],["ParameterRepository","","ParameterRepository.html","","<p>Parameter repository storing the valid parameter of the script @parameters\n=&gt; Hash of valid parameters …\n"],["String","","String.html","","<p>Class to modify a String in color and typo e stands for the esc code\n"],["add_data","DataRepository","DataRepository.html#method-i-add_data","(filename)","<p>reads the file and creates meta information and data of its content\n"],["add_data_set","DataSeries","DataSeries.html#method-i-add_data_set","(data_set)","<p>adds a data set to the array and checks if there are new maximum and\nminimum values\n"],["add_data_with_default_meta","DataRepository","DataRepository.html#method-i-add_data_with_default_meta","(filename)","<p>reads the file and creates data of its content with default meta\ninformation\n"],["bilinear_interpolation","Interpolator","Interpolator.html#method-c-bilinear_interpolation","(meta_data, data_set, x, y)","<p>singleton method for bilinear interpolation meta_data =&gt; meta_data of\nthe used dataset data_set =&gt; …\n"],["black","String","String.html#method-i-black","()","<p>String =&gt; colored black\n"],["black_bg","String","String.html#method-i-black_bg","()","<p>String =&gt; background colored black\n"],["blink","String","String.html#method-i-blink","()","<p>String =&gt; colored blink\n"],["blue","String","String.html#method-i-blue","()","<p>String =&gt; colored blue\n"],["blue_bg","String","String.html#method-i-blue_bg","()","<p>String =&gt; background colored blue\n"],["bright","String","String.html#method-i-bright","()","<p>String =&gt; colored bright\n"],["check_data_completeness","DataRepository","DataRepository.html#method-i-check_data_completeness","(meta_data)","<p>checks if all data sets in a data_series have the dimension specified in\nthe meta_data information\n"],["create_metadata","Object","Object.html#method-i-create_metadata","()","<p>creates the meta data based on the provided parameters\n"],["create_output","Object","Object.html#method-i-create_output","(meta_data)","<p>creates output based on metadata and parameters\n"],["create_output_string_for","ColorLegend","ColorLegend.html#method-i-create_output_string_for","(value, out_str)","<p>creates output string for given value value =&gt; data value\n"],["create_single_output_at_index","Object","Object.html#method-i-create_single_output_at_index","(meta_data, index)","<p>creates default output or output with an index using -i\n"],["cyan","String","String.html#method-i-cyan","()","<p>String =&gt; colored cyan\n"],["cyan_bg","String","String.html#method-i-cyan_bg","()","<p>String =&gt; background colored cyan\n"],["dark_gray_bg","String","String.html#method-i-dark_gray_bg","()","<p>String =&gt; background colored dark_gray\n"],["exchange_grounds","String","String.html#method-i-exchange_grounds","()","<p>String =&gt; exchanged color and background\n"],["get_and_check_index","Object","Object.html#method-i-get_and_check_index","(meta_data)","<p>checks if option -i was used, determines if a valid parameter was entered\nand returns the index on success …\n"],["gray","String","String.html#method-i-gray","()","<p>String =&gt; colored gray\n"],["green","String","String.html#method-i-green","()","<p>String =&gt; colored green\n"],["green_bg","String","String.html#method-i-green_bg","()","<p>String =&gt; background colored green\n"],["hide","String","String.html#method-i-hide","()","<p>String =&gt; colored with background color\n"],["interpolate_for_coordinate","Object","Object.html#method-i-interpolate_for_coordinate","(meta_data)","<p>interpolates the data for the provided coordinate and prints the result\n"],["italic","String","String.html#method-i-italic","()","<p>String =&gt; formatted in italic\n"],["light_blue","String","String.html#method-i-light_blue","()","<p>String =&gt; colored light_blue\n"],["light_blue_bg","String","String.html#method-i-light_blue_bg","()","<p>String =&gt; background colored light_blue\n"],["light_cyan","String","String.html#method-i-light_cyan","()","<p>String =&gt; colored light_cyan\n"],["light_cyan_bg","String","String.html#method-i-light_cyan_bg","()","<p>String =&gt; background colored light_cyan\n"],["light_gray","String","String.html#method-i-light_gray","()","<p>String =&gt; colored light_gray\n"],["light_gray_bg","String","String.html#method-i-light_gray_bg","()","<p>String =&gt; background colored light_gray\n"],["light_green","String","String.html#method-i-light_green","()","<p>String =&gt; colored light_green\n"],["light_green_bg","String","String.html#method-i-light_green_bg","()","<p>String =&gt; background colored light_green\n"],["light_magenta","String","String.html#method-i-light_magenta","()","<p>String =&gt; colored light_magenta\n"],["light_magenta_bg","String","String.html#method-i-light_magenta_bg","()","<p>String =&gt; background colored light_magenta\n"],["light_red","String","String.html#method-i-light_red","()","<p>String =&gt; colored light_red\n"],["light_red_bg","String","String.html#method-i-light_red_bg","()","<p>String =&gt; background colored light_red\n"],["light_yellow","String","String.html#method-i-light_yellow","()","<p>String =&gt; colored light_yellow\n"],["light_yellow_bg","String","String.html#method-i-light_yellow_bg","()","<p>String =&gt; background colored light_yellow\n"],["linear_interpolation","Interpolator","Interpolator.html#method-c-linear_interpolation","(data_point0, data_point1, coordinate)","<p>singleton method for linar interpolation between two points data_point0\n=&gt; first datapoint data_point1 …\n"],["magenta","String","String.html#method-i-magenta","()","<p>String =&gt; colored magenta\n"],["magenta_bg","String","String.html#method-i-magenta_bg","()","<p>String =&gt; background colored magenta\n"],["new","ColorLegend","ColorLegend.html#method-c-new","(min_value, max_value)","<p>initialization min_value =&gt; minimum value max_value =&gt; maximum value-\nconstraint: max_value &gt; …\n"],["new","DataDomain","DataDomain.html#method-c-new","(name, lower, upper, step)","<p>initialization raises ArgumentError when one of the parameters is not a\nnumber\n"],["new","DataPoint","DataPoint.html#method-c-new","(x=0.0, y=0.0, value=0.0)","<p>initialization x =&gt; coordinate in first dimension, default: 0.0 y =&gt;\ncoordinate in second dimension, …\n"],["new","DataRepository","DataRepository.html#method-c-new","(filename = nil,key = nil)","<p>initialization filename =&gt; filepath, default: nil key =&gt; key for the\ndata series, default: nil …\n"],["new","DataSeries","DataSeries.html#method-c-new","()","<p>initialization min_value and max_value are initialized with nil because no\nextreme values are not necessarily …\n"],["new","DataSet","DataSet.html#method-c-new","(raw_data)","<p>initialization raw_data =&gt; unformatted lines with data\n"],["new","FileReader","FileReader.html#method-c-new","(filename)","<p>initialization filename =&gt; filepath of the file which should be read\n"],["new","MetaData","MetaData.html#method-c-new","(metadata)","<p>initialization raises IndexError when parameter metadata has not the\ncorrect size\n"],["new","ParameterHandler","ParameterHandler.html#method-c-new","(argv)","<p>initialize argv =&gt; Array of input parameters\n"],["new","ParameterRepository","ParameterRepository.html#method-c-new","(argv)","<p>initialize argv =&gt; Array of input parameters raises ArgumentError if\nparameters occur after reading …\n"],["print_color_legend","ColorLegend","ColorLegend.html#method-i-print_color_legend","()","<p>prints color legend with given colors\n"],["print_data","DataOutput","DataOutput.html#method-c-print_data","(data_series, index, meta_data, with_extreme_values)","<p>reverses the data to print it in the correct occurence\n"],["print_error","Object","Object.html#method-i-print_error","(message)","<p>call for standard error output\n"],["print_help","Object","Object.html#method-i-print_help","()","<p>call to print the help text\n"],["print_help_for","HelpOutput","HelpOutput.html#method-c-print_help_for","(parameter)","<p>method to print the help text for the given parameter raises ArgumentError\nwhen a non existent parameter …\n"],["print_version","Object","Object.html#method-i-print_version","()","<p>call to print version number and author\n"],["red","String","String.html#method-i-red","()","<p>String =&gt; colored red\n"],["red_bg","String","String.html#method-i-red_bg","()","<p>String =&gt; background colored red\n"],["underline","String","String.html#method-i-underline","()","<p>String =&gt; formatted as underlined String\n"],["white","String","String.html#method-i-white","()","<p>String =&gt; colored white\n"],["white_bg","String","String.html#method-i-white_bg","()","<p>String =&gt; background colored white\n"],["yellow","String","String.html#method-i-yellow","()","<p>String =&gt; colored yellow\n"],["yellow_bg","String","String.html#method-i-yellow_bg","()","<p>String =&gt; background colored yellow\n"],["test_data","","test/test_data.html","","<p>5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0\n5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0 …\n"]]}}